// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

enum Role {
  ADMIN
  MEMBER
}

model User {
  id        String   @id @default(uuid())
  email     String
  password  String   @map("password_hash")
  name      String?
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  messages        Message[]
  members         Member[]
  channels        Channel[] // This field is not used in the current schema.
  authoredInvites Invite[]  @relation("InviteAuthor") // This relates to Invite.author
  receivedInvites Invite[]  @relation("InviteInvitee") // This relates to Invite.invitee

  @@unique([email])
  @@index([email])
  @@map("users")
}

model Member {
  id   String @id @default(uuid())
  role Role   @default(MEMBER)

  member   User   @relation(fields: [memberId], references: [id])
  memberId String @map("member_id")

  channel   Channel @relation(fields: [channelId], references: [id], onDelete: Cascade)
  channelId String  @map("channel_id")

  createdAt DateTime @default(now()) @map("created_at")

  @@map("members")
}

model Invite {
  id   String @id @default(uuid())
  role Role

  author   User   @relation("InviteAuthor", fields: [authorId], references: [id])
  authorId String @map("author_id")

  invitee   User   @relation("InviteInvitee", fields: [inviteeId], references: [id])
  inviteeId String @map("invitee_id")

  channel   Channel @relation(fields: [channelId], references: [id], onDelete: Cascade)
  channelId String  @map("channel_id")

  createdAt DateTime @default(now()) @map("created_at")

  @@unique([channelId])
  @@map("invites")
}

model Channel {
  id          String   @id @default(uuid())
  title       String
  description String?
  slug        String
  active      Boolean  @default(true)
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")

  owner   User   @relation(fields: [ownerId], references: [id])
  ownerId String @map("owner_id")

  members  Member[]
  messages Message[]
  invites  Invite[]

  @@unique([slug])
  @@index([slug])
  @@map("channels")
}

model Message {
  id      String  @id @default(uuid())
  content String?

  author   User   @relation(fields: [authorId], references: [id])
  authorId String @map("author_id")

  channel   Channel @relation(fields: [channelId], references: [id], onDelete: Cascade)
  channelId String  @map("channel_id")

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("messages")
}
